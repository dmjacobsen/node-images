---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
certificateKey: "${CERTIFICATE_KEY}"
localAPIEndpoint:
  advertiseAddress: "${K8S_NODE_IP}"
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: "${KUBERNETES_VERSION}"
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controlPlaneEndpoint: "${CONTROL_PLANE_ENDPOINT}"
dns:
  type: CoreDNS
imageRepository: k8s.gcr.io
networking:
  dnsDomain: cluster.local
  podSubnet: "${PODS_CIDR}"
  serviceSubnet: "${SERVICES_CIDR}"
etcd:
  external:
    caFile: "/etc/kubernetes/pki/etcd/ca.crt"
    certFile: "/etc/kubernetes/pki/apiserver-etcd-client.crt"
    keyFile: "/etc/kubernetes/pki/apiserver-etcd-client.key"
    endpoints:
    - https://127.0.0.1:${ETCD_HA_PORT}
apiServer:
  certSANs:
  - ${CONTROL_PLANE_HOSTNAME}
  - ${K8S_NODE_IP}
  extraArgs:
    runtime-config: "apps/v1beta1=true,apps/v1beta2=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/deployments=true,extensions/v1beta1/replicasets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/podsecuritypolicies=true"
controllerManager:
  extraArgs: ${CONTROLLER_MANAGER_EXTRA_ARGS}
  extraVolumes:
    - name: cloud-config
      hostPath: /etc/cray/kubernetes/cloud-config
      mountPath: /etc/cray/kubernetes/cloud-config
      pathType: FileOrCreate
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: systemd
resolvConf: "${RESOLV_CONF}"
maxPods: ${MAX_PODS_PER_NODE}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: ipvs
ipvs:
  strictARP: true
healthzBindAddress: 0.0.0.0:10256
